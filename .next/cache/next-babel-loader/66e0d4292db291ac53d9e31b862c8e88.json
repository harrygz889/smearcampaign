{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/WorkAccount/sick-fits/frontend/components/UpdateProduct.js\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport DisplayError from './ErrorMessage';\nimport FormStyles from './styles/Form';\nimport useForm from '../lib/useForm';\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\nconst UPDATE_PRODUCT_QUERY = gql`\n  query UPDATE_PRODUCT_QUERY(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { id: $id, name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_QUERY, {\n    variables: {\n      id // pass in updates\n\n    }\n  });\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    name: 'Nice Shoes',\n    price: 23323,\n    description: 'these are some nice shoes'\n  });\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(FormStyles, {\n    onSubmit: async e => {\n      e.preventDefault(); // TODO: SUBMIT DATA\n      // const res = await createProduct();\n      // console.log(res);\n      // clearForm();\n      // Router.push({\n      //   pathname: `/product/${res.data.createProduct.id}`,\n      // });\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"number\",\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Prodcut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/WorkAccount/sick-fits/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","DisplayError","FormStyles","useForm","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_QUERY","UpdateProduct","id","data","error","loading","variables","updateProduct","updateData","updateError","updateLoading","inputs","handleChange","clearForm","resetForm","name","price","description","console","log","e","preventDefault"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport DisplayError from './ErrorMessage';\nimport FormStyles from './styles/Form';\nimport useForm from '../lib/useForm';\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UPDATE_PRODUCT_QUERY = gql`\n  query UPDATE_PRODUCT_QUERY(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { id: $id, name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nexport default function UpdateProduct({ id }) {\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: { id },\n  });\n\n  const [\n    updateProduct,\n    { data: updateData, error: updateError, loading: updateLoading },\n  ] = useMutation(UPDATE_PRODUCT_QUERY, {\n    variables: {\n      id,\n      // pass in updates\n    },\n  });\n\n  const { inputs, handleChange, clearForm, resetForm } = useForm({\n    name: 'Nice Shoes',\n    price: 23323,\n    description: 'these are some nice shoes',\n  });\n\n  console.log(data);\n\n  return (\n    <FormStyles\n      onSubmit={async (e) => {\n        e.preventDefault();\n        // TODO: SUBMIT DATA\n\n        // const res = await createProduct();\n        // console.log(res);\n        // clearForm();\n        // Router.push({\n        //   pathname: `/product/${res.data.createProduct.id}`,\n        // });\n      }}\n    >\n      <DisplayError error={error || updateError} />\n      <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"price\">\n          Price\n          <input\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            placeholder=\"price\"\n            value={inputs.price}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Price\n          <textarea\n            type=\"number\"\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"description\"\n            value={inputs.description}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Update Prodcut</button>\n      </fieldset>\n    </FormStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}