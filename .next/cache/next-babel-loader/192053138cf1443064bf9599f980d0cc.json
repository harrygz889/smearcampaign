{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/WorkAccount/sick-fits/frontend/components/RequestReset.js\";\nimport { gql, useMutation } from '@apollo/client';\nimport FormStyles from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport DisplayError from './ErrorMessage';\nconst REQUEST_RESET_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!) {\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }\n`;\nexport default function RequestReset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [requestReset, {\n    data,\n    loading,\n    error\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(inputs);\n    const res = await requestReset().catch(console.error);\n    console.dir(res);\n  }\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n\n  if ((data === null || data === void 0 ? void 0 : data.sendUserPasswordResetLink) === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Success! Check your email for a link.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormStyles, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/WorkAccount/sick-fits/frontend/components/RequestReset.js"],"names":["gql","useMutation","FormStyles","useForm","CURRENT_USER_QUERY","DisplayError","REQUEST_RESET_MUTATION","RequestReset","inputs","handleChange","resetForm","email","password","name","requestReset","data","loading","error","variables","handleSubmit","e","preventDefault","console","log","res","catch","dir","sendUserPasswordResetLink"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,sBAAsB,GAAGN,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASO,YAAT,GAAwB;AACrC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCP,OAAO,CAAC;AAClDQ,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE,EAFwC;AAGlDC,IAAAA,IAAI,EAAE;AAH4C,GAAD,CAAnD;AAMA,QAAM,CAACC,YAAD,EAAe;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAf,IAA2ChB,WAAW,CAC1DK,sBAD0D,EAE1D;AACEY,IAAAA,SAAS,EAAEV,MADb,CAEE;;AAFF,GAF0D,CAA5D;;AAQA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACA,UAAMgB,GAAG,GAAG,MAAMV,YAAY,GAAGW,KAAf,CAAqBH,OAAO,CAACL,KAA7B,CAAlB;AACAK,IAAAA,OAAO,CAACI,GAAR,CAAYF,GAAZ;AACD;;AAED,MAAIR,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACb,MAAI,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEY,yBAAN,MAAoC,IAAxC,EAA8C;AAC5C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,UAAD;AAAY,IAAA,MAAM,EAAC,MAAnB;AAA0B,IAAA,QAAQ,EAAER,YAApC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,OAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAET,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport FormStyles from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport DisplayError from './ErrorMessage';\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!) {\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }\n`;\n\nexport default function RequestReset() {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: '',\n    password: '',\n    name: '',\n  });\n\n  const [requestReset, { data, loading, error }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: inputs,\n      // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n    }\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(inputs);\n    const res = await requestReset().catch(console.error);\n    console.dir(res);\n  }\n\n  if (loading) return <p>Loading...</p>;\n  if (data?.sendUserPasswordResetLink === null) {\n    return <p>Success! Check your email for a link.</p>;\n  }\n\n  return (\n    <FormStyles method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Request Reset</h2>\n      <DisplayError error={error} />\n      <fieldset>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Request Reset</button>\n      </fieldset>\n    </FormStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}