{"ast":null,"code":"import _regeneratorRuntime from \"/Users/WorkAccount/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/WorkAccount/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/WorkAccount/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/WorkAccount/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/WorkAccount/sick-fits/frontend/components/Reset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNUP_MUTATION(\\n    $email: String!\\n    $password: String!\\n    $token: String!\\n  ) {\\n    sendUserPasswordResetLink(\\n      email: $email\\n      password: $password\\n      token: $token\\n    ) {\\n      code\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useMutation } from '@apollo/client';\nimport FormStyles from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport DisplayError from './ErrorMessage';\nvar RESET_MUTATION = gql(_templateObject());\nexport default function Reset() {\n  _s();\n\n  var _useForm = useForm({\n    email: '',\n    password: '',\n    token: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      resetPassword = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(inputs);\n              _context.next = 4;\n              return resetPassword()[\"catch\"](console.error);\n\n            case 4:\n              res = _context.sent;\n              console.dir(res);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n\n  if ((data === null || data === void 0 ? void 0 : data.sendUserPasswordResetLink) === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Success! Check your email for a link.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormStyles, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reset, \"o7OW0hiKVJEU3w1glVLJdiqwVxE=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/Users/WorkAccount/sick-fits/frontend/components/Reset.js"],"names":["gql","useMutation","FormStyles","useForm","CURRENT_USER_QUERY","DisplayError","RESET_MUTATION","Reset","email","password","token","inputs","handleChange","resetForm","REQUEST_RESET_MUTATION","variables","resetPassword","data","loading","error","handleSubmit","e","preventDefault","console","log","res","dir","sendUserPasswordResetLink"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,cAAc,GAAGN,GAAH,mBAApB;AAiBA,eAAe,SAASO,KAAT,GAAiB;AAAA;;AAAA,iBACcJ,OAAO,CAAC;AAClDK,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE,EAFwC;AAGlDC,IAAAA,KAAK,EAAE;AAH2C,GAAD,CADrB;AAAA,MACtBC,MADsB,YACtBA,MADsB;AAAA,MACdC,YADc,YACdA,YADc;AAAA,MACAC,SADA,YACAA,SADA;;AAAA,qBAOoBZ,WAAW,CAC3Da,sBAD2D,EAE3D;AACEC,IAAAA,SAAS,EAAEJ,MADb,CAEE;;AAFF,GAF2D,CAP/B;AAAA;AAAA,MAOvBK,aAPuB;AAAA;AAAA,MAONC,IAPM,kBAONA,IAPM;AAAA,MAOAC,OAPA,kBAOAA,OAPA;AAAA,MAOSC,KAPT,kBAOSA,KAPT;;AAAA,WAefC,YAfe;AAAA;AAAA;;AAAA;AAAA,6EAe9B,iBAA4BC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AAFF;AAAA,qBAGoBK,aAAa,WAAb,CAAsBO,OAAO,CAACJ,KAA9B,CAHpB;;AAAA;AAGQM,cAAAA,GAHR;AAIEF,cAAAA,OAAO,CAACG,GAAR,CAAYD,GAAZ;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAf8B;AAAA;AAAA;;AAsB9B,MAAIP,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACb,MAAI,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEU,yBAAN,MAAoC,IAAxC,EAA8C;AAC5C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,UAAD;AAAY,IAAA,MAAM,EAAC,MAAnB;AAA0B,IAAA,QAAQ,EAAEP,YAApC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,OAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAER,MAAM,CAACH,KALhB;AAME,UAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,YAAY,EAAC,UAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACF,QALhB;AAME,UAAA,QAAQ,EAAEG;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA1DuBL,K;UACsBJ,O,EAMMF,W;;;KAP5BM,K","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport FormStyles from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport DisplayError from './ErrorMessage';\n\nconst RESET_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $password: String!\n    $token: String!\n  ) {\n    sendUserPasswordResetLink(\n      email: $email\n      password: $password\n      token: $token\n    ) {\n      code\n      message\n    }\n  }\n`;\n\nexport default function Reset() {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: '',\n    password: '',\n    token: '',\n  });\n\n  const [resetPassword, { data, loading, error }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: inputs,\n      // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n    }\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(inputs);\n    const res = await resetPassword().catch(console.error);\n    console.dir(res);\n  }\n\n  if (loading) return <p>Loading...</p>;\n  if (data?.sendUserPasswordResetLink === null) {\n    return <p>Success! Check your email for a link.</p>;\n  }\n\n  return (\n    <FormStyles method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Reset Password</h2>\n      <DisplayError error={error} />\n      <fieldset>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            autoComplete=\"password\"\n            value={inputs.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Reset Password</button>\n      </fieldset>\n    </FormStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}