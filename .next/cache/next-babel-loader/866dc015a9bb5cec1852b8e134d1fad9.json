{"ast":null,"code":"export default function calcTotalPrice(cart) {\n  const reducer = (tally, cartItem) => {\n    if (!cartItem.product) return tally; // products can be removed from server, but still in cart\n\n    return tally + cartItem.quantity * cartItem.price;\n  };\n\n  return cart.reduce(reducer, 0);\n}","map":{"version":3,"sources":["/Users/WorkAccount/sick-fits/frontend/lib/calcTotalPrice.js"],"names":["calcTotalPrice","cart","reducer","tally","cartItem","product","quantity","price","reduce"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC3C,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACnC,QAAI,CAACA,QAAQ,CAACC,OAAd,EAAuB,OAAOF,KAAP,CADY,CACE;;AACrC,WAAOA,KAAK,GAAGC,QAAQ,CAACE,QAAT,GAAoBF,QAAQ,CAACG,KAA5C;AACD,GAHD;;AAKA,SAAON,IAAI,CAACO,MAAL,CAAYN,OAAZ,EAAqB,CAArB,CAAP;AACD","sourcesContent":["export default function calcTotalPrice(cart) {\n  const reducer = (tally, cartItem) => {\n    if (!cartItem.product) return tally; // products can be removed from server, but still in cart\n    return tally + cartItem.quantity * cartItem.price;\n  };\n\n  return cart.reduce(reducer, 0);\n}\n"]},"metadata":{},"sourceType":"module"}